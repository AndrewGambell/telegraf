// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/parsers/jtinative/port_exp/port_exp.proto

package port_exp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import telemetry_top "github.com/influxdata/telegraf/plugins/parsers/jtinative/telemetry_top"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Top-level message
//
type PortExp struct {
	InterfaceExpStats    []*InterfaceExpInfos `protobuf:"bytes,1,rep,name=interfaceExp_stats,json=interfaceExpStats" json:"interfaceExp_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PortExp) Reset()         { *m = PortExp{} }
func (m *PortExp) String() string { return proto.CompactTextString(m) }
func (*PortExp) ProtoMessage()    {}
func (*PortExp) Descriptor() ([]byte, []int) {
	return fileDescriptor_port_exp_b35959a2161b6cea, []int{0}
}
func (m *PortExp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortExp.Unmarshal(m, b)
}
func (m *PortExp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortExp.Marshal(b, m, deterministic)
}
func (dst *PortExp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortExp.Merge(dst, src)
}
func (m *PortExp) XXX_Size() int {
	return xxx_messageInfo_PortExp.Size(m)
}
func (m *PortExp) XXX_DiscardUnknown() {
	xxx_messageInfo_PortExp.DiscardUnknown(m)
}

var xxx_messageInfo_PortExp proto.InternalMessageInfo

func (m *PortExp) GetInterfaceExpStats() []*InterfaceExpInfos {
	if m != nil {
		return m.InterfaceExpStats
	}
	return nil
}

//
// Interface information
//
type InterfaceExpInfos struct {
	// Interface name, e.g., et-0/0/0
	IfName *string `protobuf:"bytes,1,req,name=if_name,json=ifName" json:"if_name,omitempty"`
	// Interface operational status
	IfOperationalStatus  *string  `protobuf:"bytes,2,opt,name=if_operational_status,json=ifOperationalStatus" json:"if_operational_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfaceExpInfos) Reset()         { *m = InterfaceExpInfos{} }
func (m *InterfaceExpInfos) String() string { return proto.CompactTextString(m) }
func (*InterfaceExpInfos) ProtoMessage()    {}
func (*InterfaceExpInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_port_exp_b35959a2161b6cea, []int{1}
}
func (m *InterfaceExpInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterfaceExpInfos.Unmarshal(m, b)
}
func (m *InterfaceExpInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterfaceExpInfos.Marshal(b, m, deterministic)
}
func (dst *InterfaceExpInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfaceExpInfos.Merge(dst, src)
}
func (m *InterfaceExpInfos) XXX_Size() int {
	return xxx_messageInfo_InterfaceExpInfos.Size(m)
}
func (m *InterfaceExpInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfaceExpInfos.DiscardUnknown(m)
}

var xxx_messageInfo_InterfaceExpInfos proto.InternalMessageInfo

func (m *InterfaceExpInfos) GetIfName() string {
	if m != nil && m.IfName != nil {
		return *m.IfName
	}
	return ""
}

func (m *InterfaceExpInfos) GetIfOperationalStatus() string {
	if m != nil && m.IfOperationalStatus != nil {
		return *m.IfOperationalStatus
	}
	return ""
}

var E_JnprInterfaceExpExt = &proto.ExtensionDesc{
	ExtendedType:  (*telemetry_top.JuniperNetworksSensors)(nil),
	ExtensionType: (*PortExp)(nil),
	Field:         18,
	Name:          "jnpr_interface_exp_ext",
	Tag:           "bytes,18,opt,name=jnpr_interface_exp_ext,json=jnprInterfaceExpExt",
	Filename:      "plugins/parsers/jtinative/port_exp/port_exp.proto",
}

func init() {
	proto.RegisterType((*PortExp)(nil), "Port_exp")
	proto.RegisterType((*InterfaceExpInfos)(nil), "InterfaceExpInfos")
	proto.RegisterExtension(E_JnprInterfaceExpExt)
}

func init() {
	proto.RegisterFile("plugins/parsers/jtinative/port_exp/port_exp.proto", fileDescriptor_port_exp_b35959a2161b6cea)
}

var fileDescriptor_port_exp_b35959a2161b6cea = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0xd9, 0x7c, 0x7c, 0xda, 0x6c, 0x4f, 0xdd, 0xa0, 0x06, 0x0f, 0x12, 0x7a, 0xca, 0x29,
	0xc1, 0x1c, 0x3d, 0xa9, 0xd0, 0x43, 0x05, 0xab, 0x24, 0x07, 0x8f, 0xcb, 0x22, 0xb3, 0x65, 0x6b,
	0xb2, 0xbb, 0xcc, 0x4e, 0x34, 0x5e, 0xfd, 0xe5, 0x92, 0x52, 0x6b, 0xc0, 0xdb, 0x30, 0xcf, 0xc3,
	0xcc, 0xfb, 0xf2, 0x6b, 0xdf, 0xf6, 0x5b, 0x63, 0x43, 0xe9, 0x15, 0x06, 0xc0, 0x50, 0xee, 0xc8,
	0x58, 0x45, 0xe6, 0x1d, 0x4a, 0xef, 0x90, 0x24, 0x0c, 0xfe, 0x38, 0x14, 0x1e, 0x1d, 0xb9, 0xcb,
	0x84, 0xa0, 0x85, 0x0e, 0x08, 0x3f, 0x25, 0xb9, 0xc3, 0x72, 0xf9, 0xc8, 0x67, 0xcf, 0x07, 0x4d,
	0xdc, 0x71, 0x61, 0x2c, 0x01, 0x6a, 0xf5, 0x0a, 0xab, 0xc1, 0xcb, 0x40, 0x8a, 0x42, 0xca, 0xb2,
	0x7f, 0xf9, 0xbc, 0x12, 0xc5, 0x7a, 0x82, 0xd6, 0x56, 0xbb, 0x50, 0x2f, 0xa6, 0x76, 0x33, 0xca,
	0xcb, 0x2d, 0x5f, 0xfc, 0xf1, 0xc4, 0x15, 0x3f, 0x35, 0x5a, 0x5a, 0xd5, 0x41, 0xca, 0xb2, 0x28,
	0x8f, 0xef, 0xff, 0x7f, 0xdd, 0x46, 0x33, 0x56, 0x9f, 0x18, 0xbd, 0x51, 0x1d, 0x88, 0x8a, 0x9f,
	0x19, 0x2d, 0x9d, 0x07, 0x54, 0x64, 0x9c, 0x55, 0xed, 0xfe, 0x73, 0x1f, 0xd2, 0x28, 0x63, 0x79,
	0x5c, 0x27, 0x46, 0x3f, 0xfd, 0xb2, 0x66, 0x8f, 0x6e, 0x5e, 0xf8, 0xf9, 0xce, 0x7a, 0x94, 0xc7,
	0x08, 0x63, 0x03, 0x09, 0x03, 0x89, 0x8b, 0xe2, 0xa1, 0xb7, 0xc6, 0x03, 0x6e, 0x80, 0x3e, 0x1c,
	0xbe, 0x85, 0x06, 0x6c, 0x70, 0x18, 0x52, 0x91, 0xb1, 0x7c, 0x5e, 0xc5, 0xc5, 0x4f, 0xdf, 0x3a,
	0x19, 0x2f, 0x4c, 0xe3, 0xae, 0x06, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x10, 0x4c, 0xbd, 0x88,
	0x59, 0x01, 0x00, 0x00,
}
