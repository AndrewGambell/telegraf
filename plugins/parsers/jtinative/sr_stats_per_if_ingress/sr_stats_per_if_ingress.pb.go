// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/parsers/jtinative/sr_stats_per_if_ingress/sr_stats_per_if_ingress.proto

package sr_stats_per_if_ingress

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import telemetry_top "github.com/influxdata/telegraf/plugins/parsers/jtinative/telemetry_top"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Top-level message
//
type SrStatsPerIfIngress struct {
	// List of SR stats per IF ingress records
	PerIfRecords         []*SegmentRoutingIngIfRecord `protobuf:"bytes,1,rep,name=per_if_records,json=perIfRecords" json:"per_if_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SrStatsPerIfIngress) Reset()         { *m = SrStatsPerIfIngress{} }
func (m *SrStatsPerIfIngress) String() string { return proto.CompactTextString(m) }
func (*SrStatsPerIfIngress) ProtoMessage()    {}
func (*SrStatsPerIfIngress) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_stats_per_if_ingress_ed2451086f4c4830, []int{0}
}
func (m *SrStatsPerIfIngress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrStatsPerIfIngress.Unmarshal(m, b)
}
func (m *SrStatsPerIfIngress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrStatsPerIfIngress.Marshal(b, m, deterministic)
}
func (dst *SrStatsPerIfIngress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrStatsPerIfIngress.Merge(dst, src)
}
func (m *SrStatsPerIfIngress) XXX_Size() int {
	return xxx_messageInfo_SrStatsPerIfIngress.Size(m)
}
func (m *SrStatsPerIfIngress) XXX_DiscardUnknown() {
	xxx_messageInfo_SrStatsPerIfIngress.DiscardUnknown(m)
}

var xxx_messageInfo_SrStatsPerIfIngress proto.InternalMessageInfo

func (m *SrStatsPerIfIngress) GetPerIfRecords() []*SegmentRoutingIngIfRecord {
	if m != nil {
		return m.PerIfRecords
	}
	return nil
}

//
// SR statistics record
//
type SegmentRoutingIngIfRecord struct {
	// Interface name, e.g., xe-0/0/0
	IfName *string `protobuf:"bytes,1,req,name=if_name,json=ifName" json:"if_name,omitempty"`
	// Name of parent for AE interface, if applicable
	ParentAeName *string `protobuf:"bytes,2,opt,name=parent_ae_name,json=parentAeName" json:"parent_ae_name,omitempty"`
	// Name of the counter. This is useful when an interface has multiple counters.
	// for some scenarios, it is possible that a new counter is
	// created in the hardware.
	CounterName *string `protobuf:"bytes,3,opt,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	// Traffic statistics
	IngressStats         *SegmentRoutingIngIfStats `protobuf:"bytes,4,opt,name=ingress_stats,json=ingressStats" json:"ingress_stats,omitempty"`
	EgressStats          *SegmentRoutingIngIfStats `protobuf:"bytes,5,opt,name=egress_stats,json=egressStats" json:"egress_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SegmentRoutingIngIfRecord) Reset()         { *m = SegmentRoutingIngIfRecord{} }
func (m *SegmentRoutingIngIfRecord) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingIngIfRecord) ProtoMessage()    {}
func (*SegmentRoutingIngIfRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_stats_per_if_ingress_ed2451086f4c4830, []int{1}
}
func (m *SegmentRoutingIngIfRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingIngIfRecord.Unmarshal(m, b)
}
func (m *SegmentRoutingIngIfRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingIngIfRecord.Marshal(b, m, deterministic)
}
func (dst *SegmentRoutingIngIfRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingIngIfRecord.Merge(dst, src)
}
func (m *SegmentRoutingIngIfRecord) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingIngIfRecord.Size(m)
}
func (m *SegmentRoutingIngIfRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingIngIfRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingIngIfRecord proto.InternalMessageInfo

func (m *SegmentRoutingIngIfRecord) GetIfName() string {
	if m != nil && m.IfName != nil {
		return *m.IfName
	}
	return ""
}

func (m *SegmentRoutingIngIfRecord) GetParentAeName() string {
	if m != nil && m.ParentAeName != nil {
		return *m.ParentAeName
	}
	return ""
}

func (m *SegmentRoutingIngIfRecord) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *SegmentRoutingIngIfRecord) GetIngressStats() *SegmentRoutingIngIfStats {
	if m != nil {
		return m.IngressStats
	}
	return nil
}

func (m *SegmentRoutingIngIfRecord) GetEgressStats() *SegmentRoutingIngIfStats {
	if m != nil {
		return m.EgressStats
	}
	return nil
}

type SegmentRoutingIngIfStats struct {
	// Packet and Byte statistics
	Packets *uint64 `protobuf:"varint,1,opt,name=packets" json:"packets,omitempty"`
	Bytes   *uint64 `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	// Rates of the above counters.
	PacketRate           *uint64  `protobuf:"varint,3,opt,name=packet_rate,json=packetRate" json:"packet_rate,omitempty"`
	ByteRate             *uint64  `protobuf:"varint,4,opt,name=byte_rate,json=byteRate" json:"byte_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentRoutingIngIfStats) Reset()         { *m = SegmentRoutingIngIfStats{} }
func (m *SegmentRoutingIngIfStats) String() string { return proto.CompactTextString(m) }
func (*SegmentRoutingIngIfStats) ProtoMessage()    {}
func (*SegmentRoutingIngIfStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_sr_stats_per_if_ingress_ed2451086f4c4830, []int{2}
}
func (m *SegmentRoutingIngIfStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentRoutingIngIfStats.Unmarshal(m, b)
}
func (m *SegmentRoutingIngIfStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentRoutingIngIfStats.Marshal(b, m, deterministic)
}
func (dst *SegmentRoutingIngIfStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentRoutingIngIfStats.Merge(dst, src)
}
func (m *SegmentRoutingIngIfStats) XXX_Size() int {
	return xxx_messageInfo_SegmentRoutingIngIfStats.Size(m)
}
func (m *SegmentRoutingIngIfStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentRoutingIngIfStats.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentRoutingIngIfStats proto.InternalMessageInfo

func (m *SegmentRoutingIngIfStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *SegmentRoutingIngIfStats) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *SegmentRoutingIngIfStats) GetPacketRate() uint64 {
	if m != nil && m.PacketRate != nil {
		return *m.PacketRate
	}
	return 0
}

func (m *SegmentRoutingIngIfStats) GetByteRate() uint64 {
	if m != nil && m.ByteRate != nil {
		return *m.ByteRate
	}
	return 0
}

var E_JnprSrStatsPerIfIngressExt = &proto.ExtensionDesc{
	ExtendedType:  (*telemetry_top.JuniperNetworksSensors)(nil),
	ExtensionType: (*SrStatsPerIfIngress)(nil),
	Field:         19,
	Name:          "jnpr_sr_stats_per_if_ingress_ext",
	Tag:           "bytes,19,opt,name=jnpr_sr_stats_per_if_ingress_ext,json=jnprSrStatsPerIfIngressExt",
	Filename:      "plugins/parsers/jtinative/sr_stats_per_if_ingress/sr_stats_per_if_ingress.proto",
}

func init() {
	proto.RegisterType((*SrStatsPerIfIngress)(nil), "SrStatsPerIfIngress")
	proto.RegisterType((*SegmentRoutingIngIfRecord)(nil), "SegmentRoutingIngIfRecord")
	proto.RegisterType((*SegmentRoutingIngIfStats)(nil), "SegmentRoutingIngIfStats")
	proto.RegisterExtension(E_JnprSrStatsPerIfIngressExt)
}

func init() {
	proto.RegisterFile("plugins/parsers/jtinative/sr_stats_per_if_ingress/sr_stats_per_if_ingress.proto", fileDescriptor_sr_stats_per_if_ingress_ed2451086f4c4830)
}

var fileDescriptor_sr_stats_per_if_ingress_ed2451086f4c4830 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x6f, 0x13, 0x31,
	0x10, 0x85, 0xe5, 0x34, 0xa1, 0xed, 0xec, 0xd2, 0x83, 0x83, 0xc4, 0x36, 0x48, 0xb0, 0xca, 0x01,
	0xad, 0x84, 0x94, 0x48, 0x3d, 0x22, 0x84, 0x0a, 0x12, 0x87, 0x70, 0x28, 0xc8, 0x39, 0x70, 0xb4,
	0x4c, 0x98, 0x5d, 0xb9, 0x6d, 0x6c, 0x6b, 0x3c, 0x81, 0xf6, 0xca, 0x2f, 0xe0, 0x47, 0xf0, 0x43,
	0xd1, 0xda, 0x81, 0xe6, 0x90, 0x88, 0xe3, 0xbc, 0xf7, 0xbd, 0x91, 0xfd, 0x34, 0xf0, 0x29, 0xdc,
	0x6e, 0x3a, 0xeb, 0xe2, 0x3c, 0x18, 0x8a, 0x48, 0x71, 0x7e, 0xcd, 0xd6, 0x19, 0xb6, 0xdf, 0x71,
	0x1e, 0x49, 0x47, 0x36, 0x1c, 0x75, 0x40, 0xd2, 0xb6, 0xd5, 0xd6, 0x75, 0x84, 0x31, 0x1e, 0xd2,
	0x67, 0x81, 0x3c, 0xfb, 0xc9, 0x98, 0xf1, 0x16, 0xd7, 0xc8, 0x74, 0xaf, 0xd9, 0x87, 0x2c, 0x4e,
	0xbf, 0xc0, 0x78, 0x49, 0xcb, 0x3e, 0xf4, 0x19, 0x69, 0xd1, 0x2e, 0x72, 0x42, 0x5e, 0xc2, 0xd9,
	0x76, 0x07, 0xe1, 0xca, 0xd3, 0xb7, 0x58, 0x89, 0xfa, 0xa8, 0x29, 0x2e, 0x26, 0xb3, 0x25, 0x76,
	0x6b, 0x74, 0xac, 0xfc, 0x86, 0xad, 0xeb, 0x16, 0xae, 0x5b, 0xb4, 0x2a, 0x21, 0xaa, 0x0c, 0xfd,
	0x86, 0x3c, 0xc4, 0xe9, 0xaf, 0x01, 0x9c, 0x1f, 0x64, 0xe5, 0x73, 0x38, 0xb6, 0xad, 0x76, 0x66,
	0x8d, 0x95, 0xa8, 0x07, 0xcd, 0xe9, 0xfb, 0xd1, 0xcf, 0xcb, 0xc1, 0x89, 0x50, 0x8f, 0x6c, 0x7b,
	0x65, 0xd6, 0x28, 0x5f, 0xc1, 0x59, 0x30, 0x84, 0x8e, 0xb5, 0xc1, 0x8c, 0x0d, 0x6a, 0xf1, 0x80,
	0x95, 0xd9, 0x7c, 0x87, 0x09, 0x6e, 0xa0, 0x5c, 0xf9, 0x8d, 0x63, 0xa4, 0x8c, 0x1e, 0xed, 0xa2,
	0xc5, 0xd6, 0x4a, 0xe4, 0x5b, 0x78, 0xbc, 0xed, 0x24, 0x17, 0x55, 0x0d, 0x6b, 0xd1, 0x14, 0x17,
	0xe7, 0xfb, 0x7e, 0x95, 0x4a, 0x51, 0xe5, 0x96, 0x4f, 0x93, 0x7c, 0x03, 0x25, 0xee, 0xc6, 0x47,
	0xff, 0x8b, 0x17, 0xf8, 0x90, 0x9e, 0xfe, 0x16, 0x50, 0x1d, 0x22, 0xe5, 0x0b, 0x38, 0x0e, 0x66,
	0x75, 0x83, 0xdc, 0x57, 0x2d, 0x9a, 0x61, 0x7a, 0x7f, 0x25, 0xd4, 0x5f, 0x55, 0x3e, 0x83, 0xd1,
	0xd7, 0x7b, 0xc6, 0x98, 0x9a, 0xf8, 0x67, 0x67, 0x4d, 0xbe, 0x84, 0x22, 0x73, 0x9a, 0x0c, 0xe7,
	0x06, 0x32, 0x52, 0x0b, 0x05, 0xd9, 0x51, 0x86, 0x51, 0x4e, 0xe1, 0xb4, 0x0f, 0x64, 0x6a, 0xb8,
	0x4b, 0x9d, 0xf4, 0x7a, 0xcf, 0xbc, 0x8e, 0x50, 0x5f, 0xbb, 0x40, 0xfa, 0xc0, 0x35, 0x69, 0xbc,
	0x63, 0xf9, 0x74, 0xf6, 0x71, 0xe3, 0x6c, 0x40, 0xba, 0x42, 0xfe, 0xe1, 0xe9, 0x26, 0x2e, 0xd1,
	0x45, 0x4f, 0xb1, 0x1a, 0xa7, 0x46, 0x9e, 0xcc, 0xf6, 0x1c, 0x95, 0x9a, 0xf4, 0x6b, 0xf7, 0x18,
	0x1f, 0xee, 0xf8, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xca, 0x1e, 0x58, 0xee, 0x02, 0x00,
	0x00,
}
