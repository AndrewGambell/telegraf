// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/parsers/jtinative/rpd_ipv6_ra_oc/rpd_ipv6_ra_oc.proto

package rpd_ipv6_ra_oc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import telemetry_top "github.com/influxdata/telegraf/plugins/parsers/jtinative/telemetry_top"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ipv6RaIpv6Ra struct {
	Ipv6RaInterface      []*Ipv6RaIpv6RaIpv6RaInterfaceList `protobuf:"bytes,151,rep,name=ipv6_ra_interface,json=ipv6RaInterface" json:"ipv6_ra_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Ipv6RaIpv6Ra) Reset()         { *m = Ipv6RaIpv6Ra{} }
func (m *Ipv6RaIpv6Ra) String() string { return proto.CompactTextString(m) }
func (*Ipv6RaIpv6Ra) ProtoMessage()    {}
func (*Ipv6RaIpv6Ra) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpd_ipv6_ra_oc_5279b3bc6638000a, []int{0}
}
func (m *Ipv6RaIpv6Ra) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6RaIpv6Ra.Unmarshal(m, b)
}
func (m *Ipv6RaIpv6Ra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6RaIpv6Ra.Marshal(b, m, deterministic)
}
func (dst *Ipv6RaIpv6Ra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6RaIpv6Ra.Merge(dst, src)
}
func (m *Ipv6RaIpv6Ra) XXX_Size() int {
	return xxx_messageInfo_Ipv6RaIpv6Ra.Size(m)
}
func (m *Ipv6RaIpv6Ra) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6RaIpv6Ra.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6RaIpv6Ra proto.InternalMessageInfo

func (m *Ipv6RaIpv6Ra) GetIpv6RaInterface() []*Ipv6RaIpv6RaIpv6RaInterfaceList {
	if m != nil {
		return m.Ipv6RaInterface
	}
	return nil
}

type Ipv6RaIpv6RaIpv6RaInterfaceList struct {
	Name                 *string  `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	InitialAdvSent       *uint32  `protobuf:"varint,52,opt,name=initial_adv_sent,json=initialAdvSent" json:"initial_adv_sent,omitempty"`
	AdvSent              *uint64  `protobuf:"varint,53,opt,name=adv_sent,json=advSent" json:"adv_sent,omitempty"`
	AdvReceived          *uint64  `protobuf:"varint,54,opt,name=adv_received,json=advReceived" json:"adv_received,omitempty"`
	SolicitsReceived     *uint64  `protobuf:"varint,55,opt,name=solicits_received,json=solicitsReceived" json:"solicits_received,omitempty"`
	LastAdvTime          *uint32  `protobuf:"varint,56,opt,name=last_adv_time,json=lastAdvTime" json:"last_adv_time,omitempty"`
	LastSolicitTime      *uint32  `protobuf:"varint,57,opt,name=last_solicit_time,json=lastSolicitTime" json:"last_solicit_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) Reset()         { *m = Ipv6RaIpv6RaIpv6RaInterfaceList{} }
func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) String() string { return proto.CompactTextString(m) }
func (*Ipv6RaIpv6RaIpv6RaInterfaceList) ProtoMessage()    {}
func (*Ipv6RaIpv6RaIpv6RaInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpd_ipv6_ra_oc_5279b3bc6638000a, []int{0, 0}
}
func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6RaIpv6RaIpv6RaInterfaceList.Unmarshal(m, b)
}
func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6RaIpv6RaIpv6RaInterfaceList.Marshal(b, m, deterministic)
}
func (dst *Ipv6RaIpv6RaIpv6RaInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6RaIpv6RaIpv6RaInterfaceList.Merge(dst, src)
}
func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) XXX_Size() int {
	return xxx_messageInfo_Ipv6RaIpv6RaIpv6RaInterfaceList.Size(m)
}
func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6RaIpv6RaIpv6RaInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6RaIpv6RaIpv6RaInterfaceList proto.InternalMessageInfo

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetInitialAdvSent() uint32 {
	if m != nil && m.InitialAdvSent != nil {
		return *m.InitialAdvSent
	}
	return 0
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetAdvSent() uint64 {
	if m != nil && m.AdvSent != nil {
		return *m.AdvSent
	}
	return 0
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetAdvReceived() uint64 {
	if m != nil && m.AdvReceived != nil {
		return *m.AdvReceived
	}
	return 0
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetSolicitsReceived() uint64 {
	if m != nil && m.SolicitsReceived != nil {
		return *m.SolicitsReceived
	}
	return 0
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetLastAdvTime() uint32 {
	if m != nil && m.LastAdvTime != nil {
		return *m.LastAdvTime
	}
	return 0
}

func (m *Ipv6RaIpv6RaIpv6RaInterfaceList) GetLastSolicitTime() uint32 {
	if m != nil && m.LastSolicitTime != nil {
		return *m.LastSolicitTime
	}
	return 0
}

var E_JnprIpv6RaIpv6RaExt = &proto.ExtensionDesc{
	ExtendedType:  (*telemetry_top.JuniperNetworksSensors)(nil),
	ExtensionType: (*Ipv6RaIpv6Ra)(nil),
	Field:         64,
	Name:          "jnpr_ipv6_ra_ipv6_ra_ext",
	Tag:           "bytes,64,opt,name=jnpr_ipv6_ra_ipv6_ra_ext,json=jnprIpv6RaIpv6RaExt",
	Filename:      "plugins/parsers/jtinative/rpd_ipv6_ra_oc/rpd_ipv6_ra_oc.proto",
}

func init() {
	proto.RegisterType((*Ipv6RaIpv6Ra)(nil), "ipv6_ra_ipv6_ra")
	proto.RegisterType((*Ipv6RaIpv6RaIpv6RaInterfaceList)(nil), "ipv6_ra_ipv6_ra.ipv6_ra_interface_list")
	proto.RegisterExtension(E_JnprIpv6RaIpv6RaExt)
}

func init() {
	proto.RegisterFile("plugins/parsers/jtinative/rpd_ipv6_ra_oc/rpd_ipv6_ra_oc.proto", fileDescriptor_rpd_ipv6_ra_oc_5279b3bc6638000a)
}

var fileDescriptor_rpd_ipv6_ra_oc_5279b3bc6638000a = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4d, 0x4f, 0xe3, 0x30,
	0x10, 0x86, 0x95, 0x6e, 0xa5, 0xdd, 0x75, 0xb6, 0xdb, 0xd6, 0x95, 0x76, 0x43, 0x4f, 0xa1, 0x17,
	0x22, 0x90, 0x52, 0xa9, 0x40, 0xf9, 0x90, 0x90, 0xe8, 0x81, 0x43, 0x39, 0x70, 0x48, 0x7b, 0x37,
	0x56, 0x32, 0x20, 0x97, 0xc4, 0xb1, 0xec, 0x69, 0x28, 0x3f, 0x83, 0x13, 0x3f, 0x96, 0x0b, 0x8a,
	0x93, 0x16, 0x29, 0x70, 0xf1, 0xc7, 0xf3, 0x3e, 0x1e, 0x8d, 0xc6, 0xe4, 0x4a, 0xa5, 0xeb, 0x47,
	0x21, 0xcd, 0x58, 0x71, 0x6d, 0x40, 0x9b, 0xf1, 0x0a, 0x85, 0xe4, 0x28, 0x0a, 0x18, 0x6b, 0x95,
	0x30, 0xa1, 0x8a, 0x29, 0xd3, 0x9c, 0xe5, 0x71, 0xe3, 0x1a, 0x2a, 0x9d, 0x63, 0x3e, 0x1c, 0x20,
	0xa4, 0x90, 0x01, 0xea, 0x17, 0x86, 0xb9, 0xaa, 0xe0, 0xe8, 0xbd, 0x45, 0xba, 0x5b, 0xb3, 0xde,
	0xe9, 0x92, 0xf4, 0x77, 0x48, 0x22, 0xe8, 0x07, 0x1e, 0x83, 0xf7, 0xe6, 0xf8, 0x3f, 0x02, 0x77,
	0x72, 0x10, 0x36, 0xec, 0xf0, 0x8b, 0xca, 0x52, 0x61, 0x30, 0xb2, 0x55, 0x23, 0x3e, 0xdf, 0xd2,
	0xe1, 0x6b, 0x8b, 0xfc, 0xfb, 0xde, 0xa5, 0x94, 0xb4, 0x25, 0xcf, 0xc0, 0x3b, 0xf6, 0x9d, 0xe0,
	0x77, 0x64, 0xcf, 0x34, 0x20, 0x3d, 0x21, 0x05, 0x0a, 0x9e, 0x32, 0x9e, 0x14, 0xcc, 0x80, 0x44,
	0xef, 0xc4, 0x77, 0x82, 0x4e, 0xf4, 0xb7, 0xe6, 0xb3, 0xa4, 0x58, 0x80, 0x44, 0xba, 0x47, 0x7e,
	0xed, 0x8c, 0x53, 0xdf, 0x09, 0xda, 0xd1, 0x4f, 0x5e, 0x47, 0xfb, 0xe4, 0x4f, 0x19, 0x69, 0x88,
	0x41, 0x14, 0x90, 0x78, 0x53, 0x1b, 0xbb, 0x3c, 0x29, 0xa2, 0x1a, 0xd1, 0x23, 0xd2, 0x37, 0x79,
	0x2a, 0x62, 0x81, 0xe6, 0xd3, 0x3b, 0xb3, 0x5e, 0x6f, 0x1b, 0xec, 0xe4, 0x11, 0xe9, 0xa4, 0xdc,
	0xa0, 0xed, 0x08, 0x45, 0x06, 0xde, 0xb9, 0xed, 0xc8, 0x2d, 0xe1, 0x2c, 0x29, 0x96, 0x22, 0x03,
	0x7a, 0x48, 0xfa, 0xd6, 0xa9, 0x1f, 0x57, 0xde, 0x85, 0xf5, 0xba, 0x65, 0xb0, 0xa8, 0x78, 0xe9,
	0x5e, 0xde, 0x13, 0x6f, 0x25, 0x95, 0x66, 0x8d, 0x99, 0x32, 0xd8, 0x20, 0xfd, 0x1f, 0xde, 0xae,
	0xa5, 0x50, 0xa0, 0xef, 0x00, 0x9f, 0x73, 0xfd, 0x64, 0x16, 0x20, 0x4d, 0xae, 0x8d, 0x77, 0xed,
	0x3b, 0x81, 0x3b, 0xe9, 0x35, 0x3f, 0x22, 0x1a, 0x94, 0xa5, 0xe6, 0xd5, 0xd4, 0xed, 0x7a, 0xb3,
	0xc1, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0x35, 0x0c, 0xc7, 0x34, 0x02, 0x00, 0x00,
}
