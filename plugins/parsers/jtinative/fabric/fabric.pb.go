// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/parsers/jtinative/fabric/fabric.proto

package fabric

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import telemetry_top "github.com/influxdata/telegraf/plugins/parsers/jtinative/telemetry_top"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FabricMessageSensorLocation int32

const (
	FabricMessage_Linecard      FabricMessageSensorLocation = 1
	FabricMessage_Switch_Fabric FabricMessageSensorLocation = 2
)

var FabricMessageSensorLocation_name = map[int32]string{
	1: "Linecard",
	2: "Switch_Fabric",
}
var FabricMessageSensorLocation_value = map[string]int32{
	"Linecard":      1,
	"Switch_Fabric": 2,
}

func (x FabricMessageSensorLocation) Enum() *FabricMessageSensorLocation {
	p := new(FabricMessageSensorLocation)
	*p = x
	return p
}
func (x FabricMessageSensorLocation) String() string {
	return proto.EnumName(FabricMessageSensorLocation_name, int32(x))
}
func (x *FabricMessageSensorLocation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FabricMessageSensorLocation_value, data, "FabricMessageSensorLocation")
	if err != nil {
		return err
	}
	*x = FabricMessageSensorLocation(value)
	return nil
}
func (FabricMessageSensorLocation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fabric_9c8bf770389cd925, []int{0, 0}
}

type EdgeStatsIdentifierType int32

const (
	EdgeStats_Switch_Fabric EdgeStatsIdentifierType = 1
	EdgeStats_Linecard      EdgeStatsIdentifierType = 2
)

var EdgeStatsIdentifierType_name = map[int32]string{
	1: "Switch_Fabric",
	2: "Linecard",
}
var EdgeStatsIdentifierType_value = map[string]int32{
	"Switch_Fabric": 1,
	"Linecard":      2,
}

func (x EdgeStatsIdentifierType) Enum() *EdgeStatsIdentifierType {
	p := new(EdgeStatsIdentifierType)
	*p = x
	return p
}
func (x EdgeStatsIdentifierType) String() string {
	return proto.EnumName(EdgeStatsIdentifierType_name, int32(x))
}
func (x *EdgeStatsIdentifierType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EdgeStatsIdentifierType_value, data, "EdgeStatsIdentifierType")
	if err != nil {
		return err
	}
	*x = EdgeStatsIdentifierType(value)
	return nil
}
func (EdgeStatsIdentifierType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fabric_9c8bf770389cd925, []int{1, 0}
}

type FabricMessage struct {
	Edges                []*EdgeStats                 `protobuf:"bytes,1,rep,name=edges" json:"edges,omitempty"`
	Location             *FabricMessageSensorLocation `protobuf:"varint,2,opt,name=location,enum=FabricMessageSensorLocation" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *FabricMessage) Reset()         { *m = FabricMessage{} }
func (m *FabricMessage) String() string { return proto.CompactTextString(m) }
func (*FabricMessage) ProtoMessage()    {}
func (*FabricMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_fabric_9c8bf770389cd925, []int{0}
}
func (m *FabricMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FabricMessage.Unmarshal(m, b)
}
func (m *FabricMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FabricMessage.Marshal(b, m, deterministic)
}
func (dst *FabricMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FabricMessage.Merge(dst, src)
}
func (m *FabricMessage) XXX_Size() int {
	return xxx_messageInfo_FabricMessage.Size(m)
}
func (m *FabricMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FabricMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FabricMessage proto.InternalMessageInfo

func (m *FabricMessage) GetEdges() []*EdgeStats {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *FabricMessage) GetLocation() FabricMessageSensorLocation {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return FabricMessage_Linecard
}

type EdgeStats struct {
	SourceType      *EdgeStatsIdentifierType `protobuf:"varint,1,opt,name=source_type,json=sourceType,enum=EdgeStatsIdentifierType" json:"source_type,omitempty"`
	SourceSlot      *uint32                  `protobuf:"varint,2,opt,name=source_slot,json=sourceSlot" json:"source_slot,omitempty"`
	SourcePfe       *uint32                  `protobuf:"varint,3,opt,name=source_pfe,json=sourcePfe" json:"source_pfe,omitempty"`
	DestinationType *EdgeStatsIdentifierType `protobuf:"varint,4,opt,name=destination_type,json=destinationType,enum=EdgeStatsIdentifierType" json:"destination_type,omitempty"`
	DestinationSlot *uint32                  `protobuf:"varint,5,opt,name=destination_slot,json=destinationSlot" json:"destination_slot,omitempty"`
	DestinationPfe  *uint32                  `protobuf:"varint,6,opt,name=destination_pfe,json=destinationPfe" json:"destination_pfe,omitempty"`
	// stats from src's perspective
	ClassStats           []*ClassStats `protobuf:"bytes,7,rep,name=class_stats,json=classStats" json:"class_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EdgeStats) Reset()         { *m = EdgeStats{} }
func (m *EdgeStats) String() string { return proto.CompactTextString(m) }
func (*EdgeStats) ProtoMessage()    {}
func (*EdgeStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_fabric_9c8bf770389cd925, []int{1}
}
func (m *EdgeStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeStats.Unmarshal(m, b)
}
func (m *EdgeStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeStats.Marshal(b, m, deterministic)
}
func (dst *EdgeStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeStats.Merge(dst, src)
}
func (m *EdgeStats) XXX_Size() int {
	return xxx_messageInfo_EdgeStats.Size(m)
}
func (m *EdgeStats) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeStats.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeStats proto.InternalMessageInfo

func (m *EdgeStats) GetSourceType() EdgeStatsIdentifierType {
	if m != nil && m.SourceType != nil {
		return *m.SourceType
	}
	return EdgeStats_Switch_Fabric
}

func (m *EdgeStats) GetSourceSlot() uint32 {
	if m != nil && m.SourceSlot != nil {
		return *m.SourceSlot
	}
	return 0
}

func (m *EdgeStats) GetSourcePfe() uint32 {
	if m != nil && m.SourcePfe != nil {
		return *m.SourcePfe
	}
	return 0
}

func (m *EdgeStats) GetDestinationType() EdgeStatsIdentifierType {
	if m != nil && m.DestinationType != nil {
		return *m.DestinationType
	}
	return EdgeStats_Switch_Fabric
}

func (m *EdgeStats) GetDestinationSlot() uint32 {
	if m != nil && m.DestinationSlot != nil {
		return *m.DestinationSlot
	}
	return 0
}

func (m *EdgeStats) GetDestinationPfe() uint32 {
	if m != nil && m.DestinationPfe != nil {
		return *m.DestinationPfe
	}
	return 0
}

func (m *EdgeStats) GetClassStats() []*ClassStats {
	if m != nil {
		return m.ClassStats
	}
	return nil
}

type ClassStats struct {
	// service class, 0 being highest
	Priority *string `protobuf:"bytes,1,opt,name=priority" json:"priority,omitempty"`
	// transmit data from src to dst
	TransmitCounts       *Counters `protobuf:"bytes,2,opt,name=transmit_counts,json=transmitCounts" json:"transmit_counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ClassStats) Reset()         { *m = ClassStats{} }
func (m *ClassStats) String() string { return proto.CompactTextString(m) }
func (*ClassStats) ProtoMessage()    {}
func (*ClassStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_fabric_9c8bf770389cd925, []int{2}
}
func (m *ClassStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassStats.Unmarshal(m, b)
}
func (m *ClassStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassStats.Marshal(b, m, deterministic)
}
func (dst *ClassStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassStats.Merge(dst, src)
}
func (m *ClassStats) XXX_Size() int {
	return xxx_messageInfo_ClassStats.Size(m)
}
func (m *ClassStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassStats.DiscardUnknown(m)
}

var xxx_messageInfo_ClassStats proto.InternalMessageInfo

func (m *ClassStats) GetPriority() string {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return ""
}

func (m *ClassStats) GetTransmitCounts() *Counters {
	if m != nil {
		return m.TransmitCounts
	}
	return nil
}

type Counters struct {
	// Counter: total packets/cells from this source->destination
	Packets *uint64 `protobuf:"varint,1,opt,name=packets" json:"packets,omitempty"`
	// Counter: total bytes from this source->destination
	Bytes *uint64 `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	// Rate: packets/cells per seconds, measured across an interval of 1 second.
	PacketsPerSecond *uint64 `protobuf:"varint,3,opt,name=packets_per_second,json=packetsPerSecond" json:"packets_per_second,omitempty"`
	// Rate: bits per seconds, measured across an interval of 1 second.
	BytesPerSecond *uint64 `protobuf:"varint,4,opt,name=bytes_per_second,json=bytesPerSecond" json:"bytes_per_second,omitempty"`
	// Counter: total number of dropped packets/cells from this source->destination
	DropPackets *uint64 `protobuf:"varint,5,opt,name=drop_packets,json=dropPackets" json:"drop_packets,omitempty"`
	// Counter: total number of dropped bytes from this source->destination
	DropBytes *uint64 `protobuf:"varint,6,opt,name=drop_bytes,json=dropBytes" json:"drop_bytes,omitempty"`
	// Rate: the rate at which packets/cells are dropped, in pps/cps, measured
	// across an interval of 1 second.
	DropPacketsPerSecond *uint64 `protobuf:"varint,7,opt,name=drop_packets_per_second,json=dropPacketsPerSecond" json:"drop_packets_per_second,omitempty"`
	// Rate: the rate at which bytes are dropped, in bytes per sec, measured
	// across an interval of 1 second.
	DropBytesPerSecond *uint64 `protobuf:"varint,8,opt,name=drop_bytes_per_second,json=dropBytesPerSecond" json:"drop_bytes_per_second,omitempty"`
	// Average: avg queue depth,TAQL:time-average-queue-len, in packets
	QueueDepthAverage *uint64 `protobuf:"varint,9,opt,name=queue_depth_average,json=queueDepthAverage" json:"queue_depth_average,omitempty"`
	// Gauge: current queue depth, in packets
	QueueDepthCurrent *uint64 `protobuf:"varint,10,opt,name=queue_depth_current,json=queueDepthCurrent" json:"queue_depth_current,omitempty"`
	// Peak: the max measured queue depth, in packets, across all measurements since boot.
	QueueDepthPeak *uint64 `protobuf:"varint,11,opt,name=queue_depth_peak,json=queueDepthPeak" json:"queue_depth_peak,omitempty"`
	// The configured maximum depth of the queue, in packets
	QueueDepthMaximum *uint64 `protobuf:"varint,12,opt,name=queue_depth_maximum,json=queueDepthMaximum" json:"queue_depth_maximum,omitempty"`
	// Counter: total number of errored packets
	ErrorPackets *uint64 `protobuf:"varint,13,opt,name=error_packets,json=errorPackets" json:"error_packets,omitempty"`
	// Rate: the rate of errored packets, in pps, measured across an interval of 1 second.
	ErrorPacketsPerSecond *uint64  `protobuf:"varint,14,opt,name=error_packets_per_second,json=errorPacketsPerSecond" json:"error_packets_per_second,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Counters) Reset()         { *m = Counters{} }
func (m *Counters) String() string { return proto.CompactTextString(m) }
func (*Counters) ProtoMessage()    {}
func (*Counters) Descriptor() ([]byte, []int) {
	return fileDescriptor_fabric_9c8bf770389cd925, []int{3}
}
func (m *Counters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Counters.Unmarshal(m, b)
}
func (m *Counters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Counters.Marshal(b, m, deterministic)
}
func (dst *Counters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Counters.Merge(dst, src)
}
func (m *Counters) XXX_Size() int {
	return xxx_messageInfo_Counters.Size(m)
}
func (m *Counters) XXX_DiscardUnknown() {
	xxx_messageInfo_Counters.DiscardUnknown(m)
}

var xxx_messageInfo_Counters proto.InternalMessageInfo

func (m *Counters) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *Counters) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *Counters) GetPacketsPerSecond() uint64 {
	if m != nil && m.PacketsPerSecond != nil {
		return *m.PacketsPerSecond
	}
	return 0
}

func (m *Counters) GetBytesPerSecond() uint64 {
	if m != nil && m.BytesPerSecond != nil {
		return *m.BytesPerSecond
	}
	return 0
}

func (m *Counters) GetDropPackets() uint64 {
	if m != nil && m.DropPackets != nil {
		return *m.DropPackets
	}
	return 0
}

func (m *Counters) GetDropBytes() uint64 {
	if m != nil && m.DropBytes != nil {
		return *m.DropBytes
	}
	return 0
}

func (m *Counters) GetDropPacketsPerSecond() uint64 {
	if m != nil && m.DropPacketsPerSecond != nil {
		return *m.DropPacketsPerSecond
	}
	return 0
}

func (m *Counters) GetDropBytesPerSecond() uint64 {
	if m != nil && m.DropBytesPerSecond != nil {
		return *m.DropBytesPerSecond
	}
	return 0
}

func (m *Counters) GetQueueDepthAverage() uint64 {
	if m != nil && m.QueueDepthAverage != nil {
		return *m.QueueDepthAverage
	}
	return 0
}

func (m *Counters) GetQueueDepthCurrent() uint64 {
	if m != nil && m.QueueDepthCurrent != nil {
		return *m.QueueDepthCurrent
	}
	return 0
}

func (m *Counters) GetQueueDepthPeak() uint64 {
	if m != nil && m.QueueDepthPeak != nil {
		return *m.QueueDepthPeak
	}
	return 0
}

func (m *Counters) GetQueueDepthMaximum() uint64 {
	if m != nil && m.QueueDepthMaximum != nil {
		return *m.QueueDepthMaximum
	}
	return 0
}

func (m *Counters) GetErrorPackets() uint64 {
	if m != nil && m.ErrorPackets != nil {
		return *m.ErrorPackets
	}
	return 0
}

func (m *Counters) GetErrorPacketsPerSecond() uint64 {
	if m != nil && m.ErrorPacketsPerSecond != nil {
		return *m.ErrorPacketsPerSecond
	}
	return 0
}

var E_FabricMessageExt = &proto.ExtensionDesc{
	ExtendedType:  (*telemetry_top.JuniperNetworksSensors)(nil),
	ExtensionType: (*FabricMessage)(nil),
	Field:         2,
	Name:          "fabricMessageExt",
	Tag:           "bytes,2,opt,name=fabricMessageExt",
	Filename:      "plugins/parsers/jtinative/fabric/fabric.proto",
}

func init() {
	proto.RegisterType((*FabricMessage)(nil), "fabric_message")
	proto.RegisterType((*EdgeStats)(nil), "edge_stats")
	proto.RegisterType((*ClassStats)(nil), "class_stats")
	proto.RegisterType((*Counters)(nil), "counters")
	proto.RegisterEnum("FabricMessageSensorLocation", FabricMessageSensorLocation_name, FabricMessageSensorLocation_value)
	proto.RegisterEnum("EdgeStatsIdentifierType", EdgeStatsIdentifierType_name, EdgeStatsIdentifierType_value)
	proto.RegisterExtension(E_FabricMessageExt)
}

func init() {
	proto.RegisterFile("plugins/parsers/jtinative/fabric/fabric.proto", fileDescriptor_fabric_9c8bf770389cd925)
}

var fileDescriptor_fabric_9c8bf770389cd925 = []byte{
	// 681 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x4f, 0x4f, 0x1b, 0x3b,
	0x14, 0xc5, 0x35, 0x81, 0x40, 0x72, 0xf3, 0x17, 0xf3, 0x10, 0xa3, 0xc7, 0x02, 0x88, 0xd0, 0x13,
	0x7a, 0x12, 0x93, 0xa7, 0x3c, 0x55, 0xaa, 0xaa, 0xaa, 0x6a, 0xa1, 0xed, 0xa2, 0x2a, 0x55, 0x34,
	0x61, 0x3f, 0x32, 0x33, 0x37, 0xc1, 0x4d, 0x32, 0x76, 0x6d, 0x0f, 0x90, 0x6d, 0xbf, 0x4e, 0x97,
	0xdd, 0xf4, 0xe3, 0x55, 0x63, 0x67, 0x26, 0x4e, 0x10, 0x52, 0x57, 0xe0, 0x7b, 0xce, 0xb9, 0xf7,
	0x17, 0xdf, 0xc4, 0x70, 0x21, 0x66, 0xd9, 0x84, 0xa5, 0xaa, 0x2f, 0xa8, 0x54, 0x28, 0x55, 0xff,
	0xab, 0x66, 0x29, 0xd5, 0xec, 0x1e, 0xfb, 0x63, 0x7a, 0x2b, 0x59, 0xbc, 0xfc, 0x13, 0x08, 0xc9,
	0x35, 0xff, 0x7b, 0x5f, 0xe3, 0x0c, 0xe7, 0xa8, 0xe5, 0x22, 0xd2, 0x5c, 0xd8, 0x62, 0xef, 0x87,
	0x07, 0x6d, 0xeb, 0x8a, 0xe6, 0xa8, 0x14, 0x9d, 0x20, 0x39, 0x85, 0x2a, 0x26, 0x13, 0x54, 0xbe,
	0x77, 0xb2, 0x75, 0xde, 0x18, 0x34, 0x82, 0xfc, 0x14, 0x29, 0x4d, 0xb5, 0x0a, 0xad, 0x42, 0x2e,
	0xa1, 0x36, 0xe3, 0x31, 0xd5, 0x8c, 0xa7, 0x7e, 0xe5, 0xc4, 0x3b, 0x6f, 0x0f, 0x8e, 0x83, 0xf5,
	0x2e, 0x81, 0xc2, 0x54, 0x71, 0x19, 0x15, 0xb6, 0xcb, 0xea, 0xf7, 0xb7, 0x95, 0x9a, 0x17, 0x96,
	0xb9, 0xde, 0x00, 0x3a, 0x1b, 0x1e, 0xd2, 0x84, 0xda, 0x67, 0x96, 0x62, 0x4c, 0x65, 0xd2, 0xf5,
	0xc8, 0x1e, 0xb4, 0x46, 0x0f, 0x4c, 0xc7, 0x77, 0xd1, 0x47, 0xd3, 0xba, 0x5b, 0xe9, 0xfd, 0xdc,
	0x02, 0x58, 0xd1, 0x90, 0x2b, 0x68, 0x28, 0x9e, 0xc9, 0x18, 0x23, 0xbd, 0x10, 0xe8, 0x7b, 0x86,
	0xe4, 0xc8, 0xe1, 0x0d, 0x58, 0x82, 0xa9, 0x66, 0x63, 0x86, 0xd2, 0x58, 0x0a, 0x0a, 0xb0, 0xb1,
	0x9b, 0x85, 0x40, 0xf2, 0x4f, 0xd9, 0x44, 0xcd, 0xb8, 0x36, 0x1f, 0xa7, 0xb5, 0xe1, 0x1b, 0xcd,
	0xb8, 0x26, 0x67, 0xb0, 0x3c, 0x45, 0x62, 0x8c, 0xfe, 0x96, 0x6b, 0xab, 0x5b, 0x61, 0x38, 0x46,
	0x72, 0x0d, 0xdd, 0x04, 0x95, 0xdd, 0x03, 0x4f, 0x2d, 0xd7, 0xf6, 0x1f, 0x73, 0x75, 0x9c, 0xac,
	0x81, 0xfb, 0x6f, 0xbd, 0x9d, 0x21, 0xac, 0xba, 0xa3, 0xdd, 0x84, 0xc1, 0x0c, 0xc0, 0x2d, 0x19,
	0xd6, 0x1d, 0x37, 0xd0, 0x76, 0xd4, 0x1c, 0xf8, 0x02, 0x1a, 0xf1, 0x8c, 0x2a, 0x65, 0xc1, 0xfc,
	0x5d, 0xb3, 0xf3, 0x66, 0xe0, 0xd4, 0x42, 0x30, 0x87, 0x51, 0xfe, 0x7f, 0xbe, 0xb5, 0x0d, 0xf6,
	0xa7, 0x7b, 0xf2, 0xd6, 0x16, 0x59, 0xe9, 0x25, 0x6b, 0x23, 0xc8, 0x29, 0xd4, 0x84, 0x64, 0x5c,
	0x32, 0xbd, 0x30, 0x2b, 0xab, 0x97, 0xdf, 0x8d, 0xa2, 0x4c, 0x06, 0xd0, 0xd1, 0x92, 0xa6, 0x6a,
	0xce, 0x74, 0x14, 0xf3, 0x2c, 0xd5, 0xca, 0xec, 0xa5, 0x31, 0xa8, 0x07, 0xe6, 0x88, 0x52, 0x85,
	0xed, 0xc2, 0x71, 0x65, 0x0c, 0xbd, 0x5f, 0x55, 0xa8, 0x15, 0x22, 0x39, 0x86, 0x5d, 0x41, 0xe3,
	0x29, 0x6a, 0x65, 0x46, 0x6c, 0x9b, 0x11, 0xbe, 0x17, 0x16, 0x55, 0x72, 0x04, 0xd5, 0xdb, 0x85,
	0x46, 0xdb, 0xb7, 0x94, 0x6d, 0x8d, 0xfc, 0x0f, 0x64, 0xe9, 0x8b, 0x04, 0xca, 0x48, 0x61, 0xcc,
	0xd3, 0xc4, 0xac, 0xdc, 0x3a, 0x4f, 0xbc, 0xb0, 0xbb, 0x34, 0x0c, 0x51, 0x8e, 0x8c, 0x4c, 0xfa,
	0xd0, 0x35, 0x69, 0x37, 0xb2, 0xed, 0x46, 0xda, 0x46, 0x5e, 0x05, 0xce, 0xa1, 0x99, 0x48, 0x2e,
	0xa2, 0x02, 0xb4, 0xea, 0x92, 0x34, 0x72, 0x69, 0xb8, 0x84, 0x3d, 0x03, 0x30, 0x4e, 0x4b, 0xbc,
	0xe3, 0xfa, 0xea, 0xb9, 0x70, 0x69, 0xa8, 0x5f, 0xc3, 0xa1, 0xdb, 0xcf, 0xe5, 0xd8, 0x75, 0x39,
	0xfe, 0x72, 0x5a, 0xaf, 0x68, 0x5e, 0xc2, 0xc1, 0x6a, 0x86, 0x9b, 0xad, 0xb9, 0x59, 0x52, 0x8e,
	0x5b, 0x25, 0x5f, 0xc0, 0xfe, 0xb7, 0x0c, 0x33, 0x8c, 0x12, 0x14, 0xfa, 0x2e, 0xa2, 0xf7, 0x28,
	0xe9, 0x04, 0xfd, 0xba, 0x9b, 0xdb, 0x33, 0x8e, 0xf7, 0xb9, 0xe1, 0x9d, 0xd5, 0x37, 0x63, 0x71,
	0x26, 0x25, 0xa6, 0xda, 0x87, 0x67, 0x62, 0x57, 0x56, 0xcf, 0xaf, 0xd9, 0x8d, 0x09, 0xa4, 0x53,
	0xbf, 0xb1, 0x76, 0xcd, 0xab, 0xcc, 0x10, 0xe9, 0x74, 0x73, 0xce, 0x9c, 0x3e, 0xb2, 0x79, 0x36,
	0xf7, 0x9b, 0xcf, 0xcc, 0xb9, 0xb6, 0x3a, 0xf9, 0x17, 0x5a, 0x28, 0x25, 0x97, 0xe5, 0x7a, 0x5a,
	0xee, 0xb5, 0x37, 0x8d, 0x56, 0xec, 0xe7, 0x0d, 0xf8, 0x6b, 0x5e, 0xf7, 0xfa, 0xda, 0xee, 0x9c,
	0x03, 0x37, 0x56, 0xde, 0xe0, 0xab, 0x1b, 0xe8, 0xda, 0xd7, 0xf3, 0xda, 0x3e, 0x9e, 0x1f, 0x1e,
	0x35, 0x39, 0x0c, 0x3e, 0x65, 0x29, 0x13, 0x28, 0xbf, 0xa0, 0x7e, 0xe0, 0x72, 0xaa, 0x46, 0xe6,
	0xb1, 0x2c, 0x7e, 0x08, 0x9d, 0x8d, 0xf7, 0x36, 0x7c, 0xd2, 0xe1, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x26, 0x75, 0xe3, 0x6a, 0x1f, 0x06, 0x00, 0x00,
}
