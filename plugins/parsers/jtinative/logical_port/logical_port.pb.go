// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugins/parsers/jtinative/logical_port/logical_port.proto

package logical_port

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import telemetry_top "github.com/influxdata/telegraf/plugins/parsers/jtinative/telemetry_top"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Top-level message
//
type LogicalPort struct {
	InterfaceInfo        []*LogicalInterfaceInfo `protobuf:"bytes,1,rep,name=interface_info,json=interfaceInfo" json:"interface_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LogicalPort) Reset()         { *m = LogicalPort{} }
func (m *LogicalPort) String() string { return proto.CompactTextString(m) }
func (*LogicalPort) ProtoMessage()    {}
func (*LogicalPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{0}
}
func (m *LogicalPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalPort.Unmarshal(m, b)
}
func (m *LogicalPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalPort.Marshal(b, m, deterministic)
}
func (dst *LogicalPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalPort.Merge(dst, src)
}
func (m *LogicalPort) XXX_Size() int {
	return xxx_messageInfo_LogicalPort.Size(m)
}
func (m *LogicalPort) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalPort.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalPort proto.InternalMessageInfo

func (m *LogicalPort) GetInterfaceInfo() []*LogicalInterfaceInfo {
	if m != nil {
		return m.InterfaceInfo
	}
	return nil
}

//
// Logical Interaface information
//
type LogicalInterfaceInfo struct {
	// Logical interface name (e.g. xe-0/0/0.0)
	IfName *string `protobuf:"bytes,1,req,name=if_name,json=ifName" json:"if_name,omitempty"`
	// Time reset
	InitTime *uint64 `protobuf:"varint,2,req,name=init_time,json=initTime" json:"init_time,omitempty"`
	// Global Index
	SnmpIfIndex *uint32 `protobuf:"varint,3,opt,name=snmp_if_index,json=snmpIfIndex" json:"snmp_if_index,omitempty"`
	// Name of the aggregate bundle
	ParentAeName *string `protobuf:"bytes,4,opt,name=parent_ae_name,json=parentAeName" json:"parent_ae_name,omitempty"`
	// Inbound traffic statistics
	IngressStats *IngressInterfaceStats `protobuf:"bytes,5,opt,name=ingress_stats,json=ingressStats" json:"ingress_stats,omitempty"`
	// Outbound traffic statistics
	EgressStats *EgressInterfaceStats `protobuf:"bytes,6,opt,name=egress_stats,json=egressStats" json:"egress_stats,omitempty"`
	// Link state UP\DOWN etc.
	OpState *OperationalState `protobuf:"bytes,7,opt,name=op_state,json=opState" json:"op_state,omitempty"`
	// administrative status, i.e.. enabled/disabled
	AdministractiveStatus *string `protobuf:"bytes,8,opt,name=administractive_status,json=administractiveStatus" json:"administractive_status,omitempty"`
	// Description of the interface
	Description *string `protobuf:"bytes,9,opt,name=description" json:"description,omitempty"`
	// This corresponds to the ifLastChange object in the standard interface MIB
	LastChange *uint32 `protobuf:"varint,10,opt,name=last_change,json=lastChange" json:"last_change,omitempty"`
	// This corresponds to the ifHighSpeed object in the standard interface MIB
	HighSpeed *uint32 `protobuf:"varint,11,opt,name=high_speed,json=highSpeed" json:"high_speed,omitempty"`
	// Ingress queue information
	IngressQueueInfo []*LogicalInterfaceQueueStats `protobuf:"bytes,12,rep,name=ingress_queue_info,json=ingressQueueInfo" json:"ingress_queue_info,omitempty"`
	// Egress queue information
	EgressQueueInfo      []*LogicalInterfaceQueueStats `protobuf:"bytes,13,rep,name=egress_queue_info,json=egressQueueInfo" json:"egress_queue_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *LogicalInterfaceInfo) Reset()         { *m = LogicalInterfaceInfo{} }
func (m *LogicalInterfaceInfo) String() string { return proto.CompactTextString(m) }
func (*LogicalInterfaceInfo) ProtoMessage()    {}
func (*LogicalInterfaceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{1}
}
func (m *LogicalInterfaceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalInterfaceInfo.Unmarshal(m, b)
}
func (m *LogicalInterfaceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalInterfaceInfo.Marshal(b, m, deterministic)
}
func (dst *LogicalInterfaceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalInterfaceInfo.Merge(dst, src)
}
func (m *LogicalInterfaceInfo) XXX_Size() int {
	return xxx_messageInfo_LogicalInterfaceInfo.Size(m)
}
func (m *LogicalInterfaceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalInterfaceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalInterfaceInfo proto.InternalMessageInfo

func (m *LogicalInterfaceInfo) GetIfName() string {
	if m != nil && m.IfName != nil {
		return *m.IfName
	}
	return ""
}

func (m *LogicalInterfaceInfo) GetInitTime() uint64 {
	if m != nil && m.InitTime != nil {
		return *m.InitTime
	}
	return 0
}

func (m *LogicalInterfaceInfo) GetSnmpIfIndex() uint32 {
	if m != nil && m.SnmpIfIndex != nil {
		return *m.SnmpIfIndex
	}
	return 0
}

func (m *LogicalInterfaceInfo) GetParentAeName() string {
	if m != nil && m.ParentAeName != nil {
		return *m.ParentAeName
	}
	return ""
}

func (m *LogicalInterfaceInfo) GetIngressStats() *IngressInterfaceStats {
	if m != nil {
		return m.IngressStats
	}
	return nil
}

func (m *LogicalInterfaceInfo) GetEgressStats() *EgressInterfaceStats {
	if m != nil {
		return m.EgressStats
	}
	return nil
}

func (m *LogicalInterfaceInfo) GetOpState() *OperationalState {
	if m != nil {
		return m.OpState
	}
	return nil
}

func (m *LogicalInterfaceInfo) GetAdministractiveStatus() string {
	if m != nil && m.AdministractiveStatus != nil {
		return *m.AdministractiveStatus
	}
	return ""
}

func (m *LogicalInterfaceInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *LogicalInterfaceInfo) GetLastChange() uint32 {
	if m != nil && m.LastChange != nil {
		return *m.LastChange
	}
	return 0
}

func (m *LogicalInterfaceInfo) GetHighSpeed() uint32 {
	if m != nil && m.HighSpeed != nil {
		return *m.HighSpeed
	}
	return 0
}

func (m *LogicalInterfaceInfo) GetIngressQueueInfo() []*LogicalInterfaceQueueStats {
	if m != nil {
		return m.IngressQueueInfo
	}
	return nil
}

func (m *LogicalInterfaceInfo) GetEgressQueueInfo() []*LogicalInterfaceQueueStats {
	if m != nil {
		return m.EgressQueueInfo
	}
	return nil
}

//
//  Interface inbound/Ingress traffic statistics
//
type IngressInterfaceStats struct {
	// Count of packets
	IfPackets *uint64 `protobuf:"varint,1,req,name=if_packets,json=ifPackets" json:"if_packets,omitempty"`
	// Count of bytes
	IfOctets *uint64 `protobuf:"varint,2,req,name=if_octets,json=ifOctets" json:"if_octets,omitempty"`
	// Count of unicast packets
	IfUcastPackets *uint64 `protobuf:"varint,3,opt,name=if_ucast_packets,json=ifUcastPackets" json:"if_ucast_packets,omitempty"`
	// Count of multicast packets
	IfMcastPackets       *uint64                      `protobuf:"varint,4,opt,name=if_mcast_packets,json=ifMcastPackets" json:"if_mcast_packets,omitempty"`
	IfFcStats            []*ForwardingClassAccounting `protobuf:"bytes,5,rep,name=if_fc_stats,json=ifFcStats" json:"if_fc_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *IngressInterfaceStats) Reset()         { *m = IngressInterfaceStats{} }
func (m *IngressInterfaceStats) String() string { return proto.CompactTextString(m) }
func (*IngressInterfaceStats) ProtoMessage()    {}
func (*IngressInterfaceStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{2}
}
func (m *IngressInterfaceStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressInterfaceStats.Unmarshal(m, b)
}
func (m *IngressInterfaceStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressInterfaceStats.Marshal(b, m, deterministic)
}
func (dst *IngressInterfaceStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressInterfaceStats.Merge(dst, src)
}
func (m *IngressInterfaceStats) XXX_Size() int {
	return xxx_messageInfo_IngressInterfaceStats.Size(m)
}
func (m *IngressInterfaceStats) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressInterfaceStats.DiscardUnknown(m)
}

var xxx_messageInfo_IngressInterfaceStats proto.InternalMessageInfo

func (m *IngressInterfaceStats) GetIfPackets() uint64 {
	if m != nil && m.IfPackets != nil {
		return *m.IfPackets
	}
	return 0
}

func (m *IngressInterfaceStats) GetIfOctets() uint64 {
	if m != nil && m.IfOctets != nil {
		return *m.IfOctets
	}
	return 0
}

func (m *IngressInterfaceStats) GetIfUcastPackets() uint64 {
	if m != nil && m.IfUcastPackets != nil {
		return *m.IfUcastPackets
	}
	return 0
}

func (m *IngressInterfaceStats) GetIfMcastPackets() uint64 {
	if m != nil && m.IfMcastPackets != nil {
		return *m.IfMcastPackets
	}
	return 0
}

func (m *IngressInterfaceStats) GetIfFcStats() []*ForwardingClassAccounting {
	if m != nil {
		return m.IfFcStats
	}
	return nil
}

//
//  Interface outbound/Egress traffic statistics
//
type EgressInterfaceStats struct {
	// Count of packets
	IfPackets *uint64 `protobuf:"varint,1,req,name=if_packets,json=ifPackets" json:"if_packets,omitempty"`
	// Count of bytes
	IfOctets *uint64 `protobuf:"varint,2,req,name=if_octets,json=ifOctets" json:"if_octets,omitempty"`
	// Count of unicast packets
	IfUcastPackets *uint64 `protobuf:"varint,3,opt,name=if_ucast_packets,json=ifUcastPackets" json:"if_ucast_packets,omitempty"`
	// Count of multicast packets
	IfMcastPackets       *uint64  `protobuf:"varint,4,opt,name=if_mcast_packets,json=ifMcastPackets" json:"if_mcast_packets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EgressInterfaceStats) Reset()         { *m = EgressInterfaceStats{} }
func (m *EgressInterfaceStats) String() string { return proto.CompactTextString(m) }
func (*EgressInterfaceStats) ProtoMessage()    {}
func (*EgressInterfaceStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{3}
}
func (m *EgressInterfaceStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EgressInterfaceStats.Unmarshal(m, b)
}
func (m *EgressInterfaceStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EgressInterfaceStats.Marshal(b, m, deterministic)
}
func (dst *EgressInterfaceStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EgressInterfaceStats.Merge(dst, src)
}
func (m *EgressInterfaceStats) XXX_Size() int {
	return xxx_messageInfo_EgressInterfaceStats.Size(m)
}
func (m *EgressInterfaceStats) XXX_DiscardUnknown() {
	xxx_messageInfo_EgressInterfaceStats.DiscardUnknown(m)
}

var xxx_messageInfo_EgressInterfaceStats proto.InternalMessageInfo

func (m *EgressInterfaceStats) GetIfPackets() uint64 {
	if m != nil && m.IfPackets != nil {
		return *m.IfPackets
	}
	return 0
}

func (m *EgressInterfaceStats) GetIfOctets() uint64 {
	if m != nil && m.IfOctets != nil {
		return *m.IfOctets
	}
	return 0
}

func (m *EgressInterfaceStats) GetIfUcastPackets() uint64 {
	if m != nil && m.IfUcastPackets != nil {
		return *m.IfUcastPackets
	}
	return 0
}

func (m *EgressInterfaceStats) GetIfMcastPackets() uint64 {
	if m != nil && m.IfMcastPackets != nil {
		return *m.IfMcastPackets
	}
	return 0
}

//
//  Interface operational State details
//
type OperationalState struct {
	// If the link is up/down
	OperationalStatus    *string  `protobuf:"bytes,1,opt,name=operational_status,json=operationalStatus" json:"operational_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationalState) Reset()         { *m = OperationalState{} }
func (m *OperationalState) String() string { return proto.CompactTextString(m) }
func (*OperationalState) ProtoMessage()    {}
func (*OperationalState) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{4}
}
func (m *OperationalState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationalState.Unmarshal(m, b)
}
func (m *OperationalState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationalState.Marshal(b, m, deterministic)
}
func (dst *OperationalState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationalState.Merge(dst, src)
}
func (m *OperationalState) XXX_Size() int {
	return xxx_messageInfo_OperationalState.Size(m)
}
func (m *OperationalState) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationalState.DiscardUnknown(m)
}

var xxx_messageInfo_OperationalState proto.InternalMessageInfo

func (m *OperationalState) GetOperationalStatus() string {
	if m != nil && m.OperationalStatus != nil {
		return *m.OperationalStatus
	}
	return ""
}

//
//  Interface forwarding class accounting
//
type ForwardingClassAccounting struct {
	// Interface protocol
	IfFamily *string `protobuf:"bytes,1,opt,name=if_family,json=ifFamily" json:"if_family,omitempty"`
	// Forwarding class number
	FcNumber *uint32 `protobuf:"varint,2,opt,name=fc_number,json=fcNumber" json:"fc_number,omitempty"`
	// Count of packets
	IfPackets *uint64 `protobuf:"varint,3,opt,name=if_packets,json=ifPackets" json:"if_packets,omitempty"`
	// Count of bytes
	IfOctets             *uint64  `protobuf:"varint,4,opt,name=if_octets,json=ifOctets" json:"if_octets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardingClassAccounting) Reset()         { *m = ForwardingClassAccounting{} }
func (m *ForwardingClassAccounting) String() string { return proto.CompactTextString(m) }
func (*ForwardingClassAccounting) ProtoMessage()    {}
func (*ForwardingClassAccounting) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{5}
}
func (m *ForwardingClassAccounting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardingClassAccounting.Unmarshal(m, b)
}
func (m *ForwardingClassAccounting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardingClassAccounting.Marshal(b, m, deterministic)
}
func (dst *ForwardingClassAccounting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardingClassAccounting.Merge(dst, src)
}
func (m *ForwardingClassAccounting) XXX_Size() int {
	return xxx_messageInfo_ForwardingClassAccounting.Size(m)
}
func (m *ForwardingClassAccounting) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardingClassAccounting.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardingClassAccounting proto.InternalMessageInfo

func (m *ForwardingClassAccounting) GetIfFamily() string {
	if m != nil && m.IfFamily != nil {
		return *m.IfFamily
	}
	return ""
}

func (m *ForwardingClassAccounting) GetFcNumber() uint32 {
	if m != nil && m.FcNumber != nil {
		return *m.FcNumber
	}
	return 0
}

func (m *ForwardingClassAccounting) GetIfPackets() uint64 {
	if m != nil && m.IfPackets != nil {
		return *m.IfPackets
	}
	return 0
}

func (m *ForwardingClassAccounting) GetIfOctets() uint64 {
	if m != nil && m.IfOctets != nil {
		return *m.IfOctets
	}
	return 0
}

//
// Interface queue statistics
//
type LogicalInterfaceQueueStats struct {
	// Queue number
	QueueNumber *uint32 `protobuf:"varint,1,opt,name=queue_number,json=queueNumber" json:"queue_number,omitempty"`
	// The total number of packets that have been added to this queue
	Packets *uint64 `protobuf:"varint,2,opt,name=packets" json:"packets,omitempty"`
	// The total number of bytes that have been added to this queue
	Bytes *uint64 `protobuf:"varint,3,opt,name=bytes" json:"bytes,omitempty"`
	// The total number of tail dropped packets
	TailDropPackets *uint64 `protobuf:"varint,4,opt,name=tail_drop_packets,json=tailDropPackets" json:"tail_drop_packets,omitempty"`
	// The total number of rate-limited packets
	RateLimitDropPackets *uint64 `protobuf:"varint,5,opt,name=rate_limit_drop_packets,json=rateLimitDropPackets" json:"rate_limit_drop_packets,omitempty"`
	// The total number of rate-limited bytes
	RateLimitDropBytes *uint64 `protobuf:"varint,6,opt,name=rate_limit_drop_bytes,json=rateLimitDropBytes" json:"rate_limit_drop_bytes,omitempty"`
	// The total number of red-dropped packets
	RedDropPackets *uint64 `protobuf:"varint,7,opt,name=red_drop_packets,json=redDropPackets" json:"red_drop_packets,omitempty"`
	// The total number of red-dropped bytes
	RedDropBytes *uint64 `protobuf:"varint,8,opt,name=red_drop_bytes,json=redDropBytes" json:"red_drop_bytes,omitempty"`
	// Average queue depth, in packets
	AverageBufferOccupancy *uint64 `protobuf:"varint,9,opt,name=average_buffer_occupancy,json=averageBufferOccupancy" json:"average_buffer_occupancy,omitempty"`
	// Current queue depth, in packets
	CurrentBufferOccupancy *uint64 `protobuf:"varint,10,opt,name=current_buffer_occupancy,json=currentBufferOccupancy" json:"current_buffer_occupancy,omitempty"`
	// The max measured queue depth, in packets, across all measurements since boot
	PeakBufferOccupancy *uint64 `protobuf:"varint,11,opt,name=peak_buffer_occupancy,json=peakBufferOccupancy" json:"peak_buffer_occupancy,omitempty"`
	// Allocated buffer size
	AllocatedBufferSize  *uint64  `protobuf:"varint,12,opt,name=allocated_buffer_size,json=allocatedBufferSize" json:"allocated_buffer_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicalInterfaceQueueStats) Reset()         { *m = LogicalInterfaceQueueStats{} }
func (m *LogicalInterfaceQueueStats) String() string { return proto.CompactTextString(m) }
func (*LogicalInterfaceQueueStats) ProtoMessage()    {}
func (*LogicalInterfaceQueueStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_port_e5e67afb66ce6358, []int{6}
}
func (m *LogicalInterfaceQueueStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalInterfaceQueueStats.Unmarshal(m, b)
}
func (m *LogicalInterfaceQueueStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalInterfaceQueueStats.Marshal(b, m, deterministic)
}
func (dst *LogicalInterfaceQueueStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalInterfaceQueueStats.Merge(dst, src)
}
func (m *LogicalInterfaceQueueStats) XXX_Size() int {
	return xxx_messageInfo_LogicalInterfaceQueueStats.Size(m)
}
func (m *LogicalInterfaceQueueStats) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalInterfaceQueueStats.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalInterfaceQueueStats proto.InternalMessageInfo

func (m *LogicalInterfaceQueueStats) GetQueueNumber() uint32 {
	if m != nil && m.QueueNumber != nil {
		return *m.QueueNumber
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetTailDropPackets() uint64 {
	if m != nil && m.TailDropPackets != nil {
		return *m.TailDropPackets
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetRateLimitDropPackets() uint64 {
	if m != nil && m.RateLimitDropPackets != nil {
		return *m.RateLimitDropPackets
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetRateLimitDropBytes() uint64 {
	if m != nil && m.RateLimitDropBytes != nil {
		return *m.RateLimitDropBytes
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetRedDropPackets() uint64 {
	if m != nil && m.RedDropPackets != nil {
		return *m.RedDropPackets
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetRedDropBytes() uint64 {
	if m != nil && m.RedDropBytes != nil {
		return *m.RedDropBytes
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetAverageBufferOccupancy() uint64 {
	if m != nil && m.AverageBufferOccupancy != nil {
		return *m.AverageBufferOccupancy
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetCurrentBufferOccupancy() uint64 {
	if m != nil && m.CurrentBufferOccupancy != nil {
		return *m.CurrentBufferOccupancy
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetPeakBufferOccupancy() uint64 {
	if m != nil && m.PeakBufferOccupancy != nil {
		return *m.PeakBufferOccupancy
	}
	return 0
}

func (m *LogicalInterfaceQueueStats) GetAllocatedBufferSize() uint64 {
	if m != nil && m.AllocatedBufferSize != nil {
		return *m.AllocatedBufferSize
	}
	return 0
}

var E_JnprLogicalInterfaceExt = &proto.ExtensionDesc{
	ExtendedType:  (*telemetry_top.JuniperNetworksSensors)(nil),
	ExtensionType: (*LogicalPort)(nil),
	Field:         7,
	Name:          "jnprLogicalInterfaceExt",
	Tag:           "bytes,7,opt,name=jnprLogicalInterfaceExt",
	Filename:      "plugins/parsers/jtinative/logical_port/logical_port.proto",
}

func init() {
	proto.RegisterType((*LogicalPort)(nil), "LogicalPort")
	proto.RegisterType((*LogicalInterfaceInfo)(nil), "LogicalInterfaceInfo")
	proto.RegisterType((*IngressInterfaceStats)(nil), "IngressInterfaceStats")
	proto.RegisterType((*EgressInterfaceStats)(nil), "EgressInterfaceStats")
	proto.RegisterType((*OperationalState)(nil), "OperationalState")
	proto.RegisterType((*ForwardingClassAccounting)(nil), "ForwardingClassAccounting")
	proto.RegisterType((*LogicalInterfaceQueueStats)(nil), "logicalInterfaceQueueStats")
	proto.RegisterExtension(E_JnprLogicalInterfaceExt)
}

func init() {
	proto.RegisterFile("plugins/parsers/jtinative/logical_port/logical_port.proto", fileDescriptor_logical_port_e5e67afb66ce6358)
}

var fileDescriptor_logical_port_e5e67afb66ce6358 = []byte{
	// 917 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x5d, 0x6f, 0xdc, 0x44,
	0x14, 0x95, 0xb7, 0xdd, 0x64, 0x73, 0xbd, 0x49, 0x93, 0x69, 0x36, 0x31, 0xa9, 0xa0, 0xab, 0x15,
	0x0f, 0x8b, 0x0a, 0x1b, 0x51, 0x09, 0xa9, 0x2d, 0x95, 0x20, 0x29, 0x09, 0x5a, 0x28, 0x49, 0x71,
	0xe0, 0x79, 0x34, 0xf1, 0xde, 0xd9, 0x4c, 0x63, 0xcf, 0x98, 0x99, 0x71, 0xdb, 0xf4, 0x11, 0xc1,
	0xcf, 0xe1, 0x4f, 0xf0, 0xc7, 0x40, 0x33, 0xb6, 0xb7, 0xf6, 0x26, 0x11, 0xcf, 0xbc, 0xad, 0xcf,
	0x3d, 0xe7, 0xdc, 0x0f, 0x5f, 0xcf, 0x2c, 0x3c, 0xcd, 0xd3, 0x62, 0x2e, 0xa4, 0xd9, 0xcf, 0x99,
	0x36, 0xa8, 0xcd, 0xfe, 0x6b, 0x2b, 0x24, 0xb3, 0xe2, 0x0d, 0xee, 0xa7, 0x6a, 0x2e, 0x12, 0x96,
	0xd2, 0x5c, 0x69, 0xdb, 0x7a, 0x98, 0xe4, 0x5a, 0x59, 0xb5, 0x77, 0xdf, 0x62, 0x8a, 0x19, 0x5a,
	0x7d, 0x45, 0xad, 0xca, 0x4b, 0x70, 0xf4, 0x23, 0x84, 0x2f, 0x4b, 0xea, 0x2b, 0xa5, 0x2d, 0x79,
	0x0e, 0x1b, 0x42, 0x5a, 0xd4, 0x9c, 0x25, 0x48, 0x85, 0xe4, 0x2a, 0x0a, 0x86, 0x77, 0xc6, 0xe1,
	0xe3, 0xc1, 0xa4, 0x62, 0x4d, 0xeb, 0xe8, 0x54, 0x72, 0x15, 0xaf, 0x8b, 0xe6, 0xe3, 0xe8, 0x8f,
	0x2e, 0x6c, 0xdf, 0xc4, 0x23, 0x9f, 0xc0, 0xaa, 0xe0, 0x54, 0xb2, 0x0c, 0xa3, 0x60, 0xd8, 0x19,
	0xaf, 0x1d, 0x76, 0x7f, 0xff, 0xb6, 0xd3, 0x0b, 0xe2, 0x15, 0xc1, 0x4f, 0x58, 0x86, 0x64, 0x04,
	0x6b, 0x42, 0x0a, 0x4b, 0xad, 0xc8, 0x30, 0xea, 0x0c, 0x3b, 0xe3, 0xbb, 0x9e, 0xb1, 0x19, 0xc4,
	0x3d, 0x87, 0xff, 0x22, 0x32, 0x24, 0x9f, 0xc1, 0xba, 0x91, 0x59, 0x4e, 0x05, 0xa7, 0x42, 0xce,
	0xf0, 0x5d, 0x74, 0x67, 0x18, 0x8c, 0xd7, 0x6b, 0xa7, 0xd0, 0xc5, 0xa6, 0x7c, 0xea, 0x22, 0xe4,
	0x11, 0x6c, 0xe4, 0x4c, 0xa3, 0xb4, 0x94, 0x61, 0x99, 0xf5, 0xee, 0x30, 0xf8, 0x90, 0xb5, 0x5f,
	0x06, 0x0f, 0xd0, 0xe7, 0xfe, 0x1a, 0xd6, 0x85, 0x9c, 0x6b, 0x34, 0x86, 0x1a, 0xcb, 0xac, 0x89,
	0xba, 0xc3, 0x60, 0x1c, 0x3e, 0xde, 0x99, 0x4c, 0x4b, 0x74, 0xd1, 0xc9, 0x99, 0x8b, 0xc6, 0xfd,
	0x8a, 0xec, 0x9f, 0xc8, 0x13, 0xe8, 0x63, 0x53, 0xbb, 0xe2, 0xb5, 0x83, 0xc9, 0xd1, 0x4d, 0xd2,
	0x10, 0x1b, 0xca, 0xcf, 0xa1, 0xa7, 0x72, 0xaf, 0xc2, 0x68, 0xd5, 0xab, 0xb6, 0x26, 0xa7, 0x39,
	0x6a, 0x66, 0x85, 0x92, 0x2c, 0x75, 0x24, 0x8c, 0x57, 0x55, 0xee, 0x7f, 0x90, 0xaf, 0x60, 0x87,
	0xcd, 0x32, 0x21, 0x85, 0xb1, 0x9a, 0x25, 0xee, 0x75, 0x7b, 0x69, 0x61, 0xa2, 0x9e, 0xeb, 0x2c,
	0x1e, 0x2c, 0x45, 0xcf, 0x7c, 0x90, 0x0c, 0x21, 0x9c, 0xa1, 0x49, 0xb4, 0xc8, 0x9d, 0x6b, 0xb4,
	0xe6, 0xb9, 0x4d, 0x88, 0x3c, 0x84, 0x30, 0x65, 0xc6, 0xd2, 0xe4, 0x82, 0xc9, 0x39, 0x46, 0xe0,
	0x66, 0x1a, 0x83, 0x83, 0x5e, 0x78, 0x84, 0x7c, 0x0c, 0x70, 0x21, 0xe6, 0x17, 0xd4, 0xe4, 0x88,
	0xb3, 0x28, 0xf4, 0xf1, 0x35, 0x87, 0x9c, 0x39, 0x80, 0x4c, 0x81, 0xd4, 0xd3, 0xfb, 0xad, 0xc0,
	0xa2, 0x5a, 0x9a, 0xbe, 0x5f, 0x9a, 0x07, 0x93, 0x74, 0x69, 0x19, 0x7e, 0x76, 0x94, 0x72, 0x18,
	0x9b, 0x95, 0xcc, 0x43, 0x7e, 0x49, 0xbe, 0x87, 0x2d, 0xbc, 0xe6, 0xb4, 0xfe, 0xdf, 0x4e, 0xf7,
	0xb0, 0x6d, 0x34, 0xfa, 0x27, 0x80, 0xc1, 0x8d, 0x2f, 0x8f, 0x7c, 0x0a, 0x20, 0x38, 0xcd, 0x59,
	0x72, 0x89, 0xd6, 0xf8, 0x55, 0x2c, 0x17, 0x2d, 0x0a, 0xe2, 0x35, 0xc1, 0x5f, 0x95, 0xb8, 0xdf,
	0x46, 0x4e, 0x55, 0x62, 0x1d, 0xa9, 0xd3, 0x24, 0xf5, 0x04, 0x3f, 0xf5, 0x30, 0xd9, 0x87, 0x4d,
	0xc1, 0x69, 0x91, 0xb8, 0xd9, 0xd5, 0x7e, 0x6e, 0x21, 0x17, 0xd4, 0x0d, 0xc1, 0x7f, 0x75, 0xd1,
	0xda, 0xb4, 0x14, 0x64, 0x2d, 0xc1, 0xdd, 0x25, 0xc1, 0x4f, 0x4d, 0xc1, 0x33, 0x08, 0x05, 0xa7,
	0x3c, 0x59, 0x6c, 0xa5, 0x1b, 0xc4, 0xde, 0xe4, 0x58, 0xe9, 0xb7, 0x4c, 0xcf, 0x84, 0x9c, 0xbf,
	0x48, 0x99, 0x31, 0x07, 0x49, 0xa2, 0x0a, 0x69, 0x85, 0x9c, 0xbb, 0x0e, 0x8e, 0x13, 0xdf, 0xe7,
	0xe8, 0xef, 0x00, 0xb6, 0x8f, 0xfe, 0xe7, 0x03, 0x18, 0x1d, 0xc0, 0xe6, 0xf2, 0x07, 0x41, 0xbe,
	0x00, 0xa2, 0x3e, 0x60, 0xf5, 0x37, 0x10, 0xf8, 0xbd, 0xde, 0x52, 0x6d, 0x76, 0x61, 0x46, 0x7f,
	0x05, 0xf0, 0xd1, 0xad, 0x03, 0xab, 0xda, 0xe4, 0x2c, 0x13, 0xe9, 0x55, 0xe9, 0x51, 0x9f, 0x10,
	0x3d, 0xc1, 0x8f, 0x3d, 0xec, 0x38, 0x3c, 0xa1, 0xb2, 0xc8, 0xce, 0x51, 0x47, 0x9d, 0xe6, 0x89,
	0xd3, 0xe3, 0xc9, 0x89, 0x87, 0x97, 0x86, 0xda, 0x1a, 0xc2, 0x6d, 0x43, 0x6d, 0x35, 0xbe, 0x18,
	0xea, 0xe8, 0xcf, 0x2e, 0xec, 0xdd, 0xbe, 0xe9, 0x64, 0x0c, 0xfd, 0xf2, 0xd3, 0xa8, 0xea, 0x09,
	0x5a, 0x27, 0xa0, 0x0f, 0x55, 0x25, 0x3d, 0x84, 0xd5, 0xba, 0x9e, 0x4e, 0x33, 0x55, 0x8d, 0x92,
	0x07, 0xd0, 0x3d, 0xbf, 0xb2, 0xb8, 0x54, 0x6e, 0x89, 0x91, 0x2f, 0x61, 0xcb, 0x32, 0x91, 0xd2,
	0x99, 0x56, 0xf9, 0xcd, 0xef, 0xea, 0x9e, 0x8b, 0x7f, 0xa7, 0x55, 0x5e, 0x77, 0xf7, 0x1c, 0x76,
	0x35, 0xb3, 0x48, 0x53, 0x91, 0x09, 0xdb, 0x16, 0x76, 0x9b, 0xc2, 0x6d, 0xc7, 0x7a, 0xe9, 0x48,
	0x4d, 0xf5, 0x13, 0x18, 0x2c, 0xab, 0xcb, 0xea, 0x56, 0x9a, 0x5a, 0xd2, 0xd2, 0x1e, 0xfa, 0x52,
	0xf7, 0x61, 0x53, 0xe3, 0xac, 0x9d, 0x70, 0xb5, 0xb5, 0x55, 0x1a, 0x67, 0xcd, 0x54, 0x8f, 0x60,
	0x63, 0x21, 0x28, 0x73, 0xf4, 0x9a, 0xf4, 0x7e, 0x45, 0x2f, 0xdd, 0xbf, 0x81, 0x88, 0xbd, 0x41,
	0xcd, 0xe6, 0x48, 0xcf, 0x0b, 0xce, 0x51, 0x53, 0x95, 0x24, 0x45, 0xce, 0x64, 0x72, 0xe5, 0x0f,
	0xd3, 0x52, 0x36, 0x0c, 0xe2, 0x9d, 0x8a, 0x76, 0xe8, 0x59, 0xa7, 0x35, 0xc9, 0x19, 0x24, 0x85,
	0xf6, 0x57, 0xd1, 0x35, 0x03, 0x68, 0x19, 0x54, 0xb4, 0x65, 0x83, 0xa7, 0x30, 0xc8, 0x91, 0x5d,
	0x5e, 0x57, 0x87, 0x4d, 0xf5, 0x7d, 0xc7, 0xb9, 0x41, 0xca, 0xd2, 0x54, 0x25, 0xcc, 0xe2, 0xac,
	0xd6, 0x1b, 0xf1, 0x1e, 0xa3, 0x7e, 0x4b, 0xba, 0xe0, 0x94, 0xfa, 0x33, 0xf1, 0x1e, 0x9f, 0x51,
	0xd8, 0x7d, 0x2d, 0x73, 0xbd, 0x7c, 0x97, 0x1f, 0xbd, 0xb3, 0x64, 0x77, 0xf2, 0x43, 0x21, 0x45,
	0x8e, 0xfa, 0x04, 0xed, 0x5b, 0xa5, 0x2f, 0xcd, 0x19, 0x4a, 0xa3, 0xb4, 0xa9, 0x2e, 0xb1, 0xfe,
	0xa4, 0xf1, 0x77, 0x22, 0xbe, 0xcd, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x7c, 0xc2,
	0x9c, 0xc7, 0x08, 0x00, 0x00,
}
